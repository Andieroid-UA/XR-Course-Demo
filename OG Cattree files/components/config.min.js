//******************************************************************************/
//* This code defines a Config constructor function that manages configuration 
//*settings using the window.localStorage object. Here's a breakdown of what the code does:*/

var Config = function (key) {
    var defaultConfig = {
        autosave: false,
        theme: "css/dark.css",
        themePath: "../kittycad/bower_components/three.js/editor/",
        "project/title": "",
        "project/editable": true,
        "project/renderer": "WebGLRenderer",
        "project/renderer/antialias": true,
        "project/renderer/gammaInput": false,
        "project/renderer/gammaOutput": false,
        "project/renderer/shadows": true,
        "project/vr": false,
        "settings/history": false,
        "settings/shortcuts/translate": "w",
        "settings/shortcuts/rotate": "e",
        "settings/shortcuts/scale": "r",
        "settings/shortcuts/undo": "z",
        "settings/shortcuts/focus": "f"
    };

    //******************************************************************************/

    //*It checks if there is a stored configuration in the localStorage under 
    //*the given key. If not, it initializes the localStorage with the default configuration. 
    //*If there is a stored configuration, it merges the stored values with the default values.
    //*Return an Object with Getter, Setter, and Clear Methods: */

    if (void 0 === window.localStorage[key]) {
        window.localStorage[key] = JSON.stringify(defaultConfig);
    } else {
        var storedConfig = JSON.parse(window.localStorage[key]);
        for (var prop in storedConfig) {
            defaultConfig[prop] = storedConfig[prop];
        }
    }

    //******************************************************************************/
//*It returns an object with three methods:

//*getKey(property): Returns the value of a specific configuration property.
//*setKey(arguments): Sets or updates the values of configuration properties based on provided 
//*arguments. It also logs the time of the update to the console.
//*clear(): Clears the entire configuration from localStorage.
//*In summary, this code provides a way to manage and persistently store configuration settings 
//*for a 3D modeling application in the localStorage. The configuration can be retrieved, 
//*updated, or cleared using the provided methods. */

    return {
        getKey: function (property) {
            return defaultConfig[property];
        },
        setKey: function () {
            for (var i = 0, len = arguments.length; i < len; i += 2) {
                defaultConfig[arguments[i]] = arguments[i + 1];
            }
            window.localStorage[key] = JSON.stringify(defaultConfig);
            console.log("[" + /\d\d\:\d\d\:\d\d/.exec(new Date)[0] + "]", "Saved config to LocalStorage.");
        },
        clear: function () {
            delete window.localStorage[key];
        }
    };
};
